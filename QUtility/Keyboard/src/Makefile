#############################################################################
# Makefile for building: src
# Generated by qmake (2.01a) (Qt 4.6.3) on: Mon May 16 09:51:22 2011
# Project:  src.pro
# Template: app
# Command: /opt/qt-4.6.3/bin/qmake -unix -o Makefile src.pro
#############################################################################

####### Compiler, tools and options

CC            = arm-926ejs-linux-gcc -lts
CXX           = arm-926ejs-linux-g++ -lts
DEFINES       = -DQT_NO_DEBUG -DQT_WEBKIT_LIB -DQT_SQL_LIB -DQT_GUI_LIB -DQT_NETWORK_LIB -DQT_CORE_LIB -DQT_SHARED
CFLAGS        = -pipe -O2 -Wall -W -D_REENTRANT $(DEFINES)
CXXFLAGS      = -pipe -O2 -Wall -W -D_REENTRANT $(DEFINES)
INCPATH       = -I/opt/qt-4.6.3/mkspecs/qws/linux-arm-g++ -I. -I/opt/qt-4.6.3/include/QtCore -I/opt/qt-4.6.3/include/QtNetwork -I/opt/qt-4.6.3/include/QtGui -I/opt/qt-4.6.3/include/QtSql -I/opt/qt-4.6.3/include/QtWebKit -I/opt/qt-4.6.3/include -I. -I.
LINK          = arm-926ejs-linux-g++ -lts
LFLAGS        = -Wl,-O1 -Wl,-rpath,/opt/qt-4.6.3/lib
LIBS          = $(SUBLIBS)  -L/opt/qt-4.6.3/lib -lQtWebKit -L/opt/tslib/lib -L/opt/qt-4.6.3/lib -lQtSql -lQtGui -lQtNetwork -lQtCore -lpthread 
AR            = arm-926ejs-linux-ar cqs
RANLIB        = 
QMAKE         = /opt/qt-4.6.3/bin/qmake
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
SED           = sed
COPY_FILE     = $(COPY)
COPY_DIR      = $(COPY) -r
STRIP         = arm-926ejs-linux-strip
INSTALL_FILE  = install -m 644 -p
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = install -m 755 -p
DEL_FILE      = rm -f
SYMLINK       = ln -f -s
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p

####### Output directory

OBJECTS_DIR   = ./

####### Files

SOURCES       = py.c \
		wb.c py_yacc.cpp \
		wb_yacc.cpp \
		py_lex.cpp \
		wb_lex.cpp
OBJECTS       = py.o \
		wb.o \
		py_yacc.o \
		wb_yacc.o \
		py_lex.o \
		wb_lex.o
DIST          = /opt/qt-4.6.3/mkspecs/common/g++.conf \
		/opt/qt-4.6.3/mkspecs/common/unix.conf \
		/opt/qt-4.6.3/mkspecs/common/linux.conf \
		/opt/qt-4.6.3/mkspecs/common/qws.conf \
		/opt/qt-4.6.3/mkspecs/qconfig.pri \
		/opt/qt-4.6.3/mkspecs/features/qt_functions.prf \
		/opt/qt-4.6.3/mkspecs/features/qt_config.prf \
		/opt/qt-4.6.3/mkspecs/features/exclusive_builds.prf \
		/opt/qt-4.6.3/mkspecs/features/default_pre.prf \
		/opt/qt-4.6.3/mkspecs/features/release.prf \
		/opt/qt-4.6.3/mkspecs/features/default_post.prf \
		/opt/qt-4.6.3/mkspecs/features/warn_on.prf \
		/opt/qt-4.6.3/mkspecs/features/qt.prf \
		/opt/qt-4.6.3/mkspecs/features/unix/thread.prf \
		/opt/qt-4.6.3/mkspecs/features/moc.prf \
		/opt/qt-4.6.3/mkspecs/features/resources.prf \
		/opt/qt-4.6.3/mkspecs/features/uic.prf \
		/opt/qt-4.6.3/mkspecs/features/yacc.prf \
		/opt/qt-4.6.3/mkspecs/features/lex.prf \
		/opt/qt-4.6.3/mkspecs/features/include_source_dir.prf \
		src.pro
QMAKE_TARGET  = src
DESTDIR       = 
TARGET        = src

first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: Makefile $(TARGET)

$(TARGET):  $(OBJECTS)  
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJCOMP) $(LIBS)

Makefile: src.pro  /opt/qt-4.6.3/mkspecs/qws/linux-arm-g++/qmake.conf /opt/qt-4.6.3/mkspecs/common/g++.conf \
		/opt/qt-4.6.3/mkspecs/common/unix.conf \
		/opt/qt-4.6.3/mkspecs/common/linux.conf \
		/opt/qt-4.6.3/mkspecs/common/qws.conf \
		/opt/qt-4.6.3/mkspecs/qconfig.pri \
		/opt/qt-4.6.3/mkspecs/features/qt_functions.prf \
		/opt/qt-4.6.3/mkspecs/features/qt_config.prf \
		/opt/qt-4.6.3/mkspecs/features/exclusive_builds.prf \
		/opt/qt-4.6.3/mkspecs/features/default_pre.prf \
		/opt/qt-4.6.3/mkspecs/features/release.prf \
		/opt/qt-4.6.3/mkspecs/features/default_post.prf \
		/opt/qt-4.6.3/mkspecs/features/warn_on.prf \
		/opt/qt-4.6.3/mkspecs/features/qt.prf \
		/opt/qt-4.6.3/mkspecs/features/unix/thread.prf \
		/opt/qt-4.6.3/mkspecs/features/moc.prf \
		/opt/qt-4.6.3/mkspecs/features/resources.prf \
		/opt/qt-4.6.3/mkspecs/features/uic.prf \
		/opt/qt-4.6.3/mkspecs/features/yacc.prf \
		/opt/qt-4.6.3/mkspecs/features/lex.prf \
		/opt/qt-4.6.3/mkspecs/features/include_source_dir.prf \
		/opt/qt-4.6.3/lib/libQtWebKit.prl \
		/opt/qt-4.6.3/lib/libQtGui.prl \
		/opt/qt-4.6.3/lib/libQtNetwork.prl \
		/opt/qt-4.6.3/lib/libQtCore.prl \
		/opt/qt-4.6.3/lib/libQtSql.prl
	$(QMAKE) -unix -o Makefile src.pro
/opt/qt-4.6.3/mkspecs/common/g++.conf:
/opt/qt-4.6.3/mkspecs/common/unix.conf:
/opt/qt-4.6.3/mkspecs/common/linux.conf:
/opt/qt-4.6.3/mkspecs/common/qws.conf:
/opt/qt-4.6.3/mkspecs/qconfig.pri:
/opt/qt-4.6.3/mkspecs/features/qt_functions.prf:
/opt/qt-4.6.3/mkspecs/features/qt_config.prf:
/opt/qt-4.6.3/mkspecs/features/exclusive_builds.prf:
/opt/qt-4.6.3/mkspecs/features/default_pre.prf:
/opt/qt-4.6.3/mkspecs/features/release.prf:
/opt/qt-4.6.3/mkspecs/features/default_post.prf:
/opt/qt-4.6.3/mkspecs/features/warn_on.prf:
/opt/qt-4.6.3/mkspecs/features/qt.prf:
/opt/qt-4.6.3/mkspecs/features/unix/thread.prf:
/opt/qt-4.6.3/mkspecs/features/moc.prf:
/opt/qt-4.6.3/mkspecs/features/resources.prf:
/opt/qt-4.6.3/mkspecs/features/uic.prf:
/opt/qt-4.6.3/mkspecs/features/yacc.prf:
/opt/qt-4.6.3/mkspecs/features/lex.prf:
/opt/qt-4.6.3/mkspecs/features/include_source_dir.prf:
/opt/qt-4.6.3/lib/libQtWebKit.prl:
/opt/qt-4.6.3/lib/libQtGui.prl:
/opt/qt-4.6.3/lib/libQtNetwork.prl:
/opt/qt-4.6.3/lib/libQtCore.prl:
/opt/qt-4.6.3/lib/libQtSql.prl:
qmake:  FORCE
	@$(QMAKE) -unix -o Makefile src.pro

dist: 
	@$(CHK_DIR_EXISTS) .tmp/src1.0.0 || $(MKDIR) .tmp/src1.0.0 
	$(COPY_FILE) --parents $(SOURCES) $(DIST) .tmp/src1.0.0/ && $(COPY_FILE) --parents py.h wb.h .tmp/src1.0.0/ && $(COPY_FILE) --parents py.c wb.c .tmp/src1.0.0/ && $(COPY_FILE) --parents py.y wb.y .tmp/src1.0.0/ && $(COPY_FILE) --parents py.y wb.y .tmp/src1.0.0/ && $(COPY_FILE) --parents py.l wb.l .tmp/src1.0.0/ && (cd `dirname .tmp/src1.0.0` && $(TAR) src1.0.0.tar src1.0.0 && $(COMPRESS) src1.0.0.tar) && $(MOVE) `dirname .tmp/src1.0.0`/src1.0.0.tar.gz . && $(DEL_FILE) -r .tmp/src1.0.0


clean:compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) 
	-$(DEL_FILE) Makefile


check: first

mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all:
compiler_moc_header_clean:
compiler_rcc_make_all:
compiler_rcc_clean:
compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all:
compiler_uic_clean:
compiler_yacc_decl_make_all: py_yacc.h wb_yacc.h
compiler_yacc_decl_clean:
	-$(DEL_FILE) py_yacc.h wb_yacc.h
py_yacc.h: py.y
	yacc -d -p py -b py py.y
	 rm -f py_yacc.h py_yacc.cpp
	 mv -f py.tab.h py_yacc.h
	 mv -f py.tab.c py_yacc.cpp
	

wb_yacc.h: wb.y
	yacc -d -p wb -b wb wb.y
	 rm -f wb_yacc.h wb_yacc.cpp
	 mv -f wb.tab.h wb_yacc.h
	 mv -f wb.tab.c wb_yacc.cpp
	

compiler_yacc_impl_make_all: py_yacc.cpp wb_yacc.cpp
compiler_yacc_impl_clean:
	-$(DEL_FILE) py_yacc.cpp wb_yacc.cpp
py_yacc.cpp: py.y \
		py_yacc.h
	


wb_yacc.cpp: wb.y \
		wb_yacc.h
	


compiler_lex_make_all: py_lex.cpp wb_lex.cpp
compiler_lex_clean:
	-$(DEL_FILE) py_lex.cpp wb_lex.cpp
py_lex.cpp: py.l
	flex -Ppy py.l
	 rm -f py_lex.cpp
	 mv -f lex.py.c py_lex.cpp
	

wb_lex.cpp: wb.l
	flex -Pwb wb.l
	 rm -f wb_lex.cpp
	 mv -f lex.wb.c wb_lex.cpp
	

compiler_clean: compiler_yacc_decl_clean compiler_yacc_impl_clean compiler_lex_clean 

####### Compile

py.o: py.c 
	$(CC) -c $(CFLAGS) $(INCPATH) -o py.o py.c

wb.o: wb.c 
	$(CC) -c $(CFLAGS) $(INCPATH) -o wb.o wb.c

py_yacc.o: py_yacc.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o py_yacc.o py_yacc.cpp

wb_yacc.o: wb_yacc.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o wb_yacc.o wb_yacc.cpp

py_lex.o: py_lex.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o py_lex.o py_lex.cpp

wb_lex.o: wb_lex.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o wb_lex.o wb_lex.cpp

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

